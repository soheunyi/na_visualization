{"version":3,"sources":["components/toggleSwitch.js","api/parsePoints.js","components/selectBox.js","components/inputBox.js","components/multipleInputBox.js","drawing/drawFunctionPoints.js","tools/addPosition.js","tools/originIfUndefined.js","components/floatingPoint.js","canvas/pointCanvas.jsx","animations/absoluteAnimations/brownianMotion.js","constant.js","animations/absoluteAnimations/linear.js","animations/relativeAnimations/circular.js","pointSetter.js","tools/emptyArrayIfUndefined.js","tools/extractVariable.js","index.js"],"names":["Toggle","props","toggle","useRef","checkbox","name","ref","className","type","defaultChecked","value","onClick","onChange","current","checked","classList","onToggle","positionParser","array","pathPoints","i","length","push","x","y","SelectBox","options","selectedOption","InputBox","onSubmit","event","preventDefault","inputElement","document","getElementById","concat","handleInputChange","Number","style","padding","id","target","MultipleInputBox","inputChange","newInputsInfo","inputsInfo","_","findIndex","info","class","map","drawFunctionPoints","ctx","points","color","width","sort","a","b","beginPath","point","index","nextPoint","moveTo","lineTo","strokeStyle","lineWidth","stroke","addPosition","p1","p2","originIfUndefined","displacement","isUndefined","FloatingPoint","initialPosition","useMemo","position","initialAnimationFrameCount","animationFrameCount","absoluteAnimationDisplacementRef","relativeAnimationDisplacementRef","useState","deltaX","deltaY","lastX","lastY","dragData","setDragData","updatePivotalPoint","key","absoluteAnimationDisplacement","relativeAnimationDisplacement","newPoint","handleDrag","animated","absoluteAnimation","relativeAnimation","useEffect","absoluteMovement","pointStyle","pointSize","animationDisplacement","onDrag","_event","left","top","height","borderRadius","background","opacity","PointCanvas","canvasRef","draw","lineStyle","canvasStyle","context","getContext","clearRect","canvas","fillStyle","arc","Math","PI","fill","drawCoordinates","pseudoNormalGenerator","n","randomValue","random","SCAN_RATE","ABSOLUTE_ANIMATION_OPTIONS","label","variable","sigma","speed","RELATIVE_ANIMATION_OPTIONS","radius","freq","clockwise","phase","cos","sin","INTERPOLATION_OPTIONS","PositionSetter","setAnimationFrameCount","interval","setInterval","prev","clearInterval","onDoubleClick","handleDoubleClick","pivotalPoints","plotPoints","path","pivotal","emptyArrayIfUndefined","extractVariable","variableRef","forEach","singleV","App","setAnimated","pivotalP","setPivotalP","plotP","setPlotP","absoluteAnimationRef","relativeAnimationRef","absoluteAnimationVariableRef","relativeAnimationVariableRef","plotPosition","rootElement","getAttribute","plotPositionParsed","JSON","parse","setAbsoluteAnimationVariableRef","arr","setRelativeAnimationVariableRef","newIndex","o","handleDragRef","draggedPoint","updateIndex","p","handleDoubleClickRef","toString","obj","setAttribute","ReactCursorPosition","stringify","ReactDOM","render"],"mappings":"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","file":"static/js/main.663a726e.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./toggleSwitch.css\";\nToggle.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n};\nexport default function Toggle(props) {\n  const toggle = useRef();\n  const checkbox = useRef();\n  function handleToggle() {\n    if (props.onChange) props.onChange(checkbox.current.checked);\n    toggle.current.classList.toggle(\"toggled\");\n    checkbox.current.checked = !checkbox.current.checked;\n    if (props.onToggle) props.onToggle(checkbox.current.checked);\n  }\n  return (\n    <div {...props}>\n      <p>{props.name}</p>\n      <input\n        ref={checkbox}\n        name={props.name}\n        className=\"toggle-checkbox\"\n        type=\"checkbox\"\n        defaultChecked={props.value}\n        value={props.value || false}\n      />\n      <span\n        ref={toggle}\n        onClick={handleToggle}\n        className={props.checked ? \"toggled toggle-switch\" : \"toggle-switch\"}\n      >\n        <span className=\"toggle\"></span>\n      </span>\n    </div>\n  );\n}\n","export function positionParser(array) {\n  const pathPoints = [];\n\n  for (let i = 0; i < array.length / 2; i++) {\n    pathPoints.push({\n      x: array[2 * i],\n      y: array[2 * i + 1],\n    });\n  }\n\n  return pathPoints;\n}\n","import Select from \"react-select\";\n\nexport default function SelectBox(props) {\n  const onChange = (selectedOption) => {\n    props.onChange(selectedOption);\n  };\n\n  return (\n    <div {...props}>\n      <p>{props.name}</p>\n      <Select options={props.options} onChange={onChange}></Select>\n    </div>\n  );\n}\n","export default function InputBox(props) {\n  const handleCheckboxChange = (event) => {\n    const target = event.target;\n    if (target.type === \"checkbox\") {\n      props.handleInputChange({\n        name: target.name,\n        value: !target.checked,\n        type: target.type,\n      });\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const inputElement = document.getElementById(\n      props.name.concat(\"-input-form\")\n    );\n\n    props.handleInputChange({\n      name: inputElement.name,\n      value: Number(inputElement.value),\n      type: inputElement.type,\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ padding: \"1%\" }}>\n      <label>\n        {props.name}\n        <br />\n        <input\n          id={props.name.concat(\"-input-form\")}\n          type={props.type}\n          name={props.name}\n          onChange={handleCheckboxChange}\n        />\n      </label>\n    </form>\n  );\n}\n","import InputBox from \"./inputBox\";\nimport _ from \"lodash\";\n\nexport default function MultipleInputBox(props) {\n  function handleInputChange(inputChange) {\n    const newInputsInfo = [...props.inputsInfo];\n    const updateIndex = _.findIndex(\n      props.inputsInfo,\n      (info) => info.name === inputChange.name\n    );\n    newInputsInfo[updateIndex] = inputChange;\n    props.handleInputChange(newInputsInfo);\n  }\n\n  return (\n    <div class=\"multiple-input-box\">\n      {props.inputsInfo.map((info) => (\n        <InputBox\n          handleInputChange={handleInputChange}\n          type={info.type}\n          name={info.name}\n        ></InputBox>\n      ))}\n    </div>\n  );\n}\n","const drawFunctionPoints = (ctx, points, style) => {\n  const { color = \"black\", width = 1 } = style;\n\n  function sort_function(a, b) {\n    if (a.x > b.x) return 1;\n    if (a.x < b.x) return -1;\n    if (a.y > b.y) return 1;\n    if (a.y < b.y) return -1;\n  }\n  points.sort(sort_function);\n\n  if (points.length > 1) {\n    ctx.beginPath();\n    points.map((point, index) => {\n      if (index >= points.length - 1) {\n        return;\n      }\n      const nextPoint = points[index + 1];\n      ctx.moveTo(point.x, point.y);\n      ctx.lineTo(nextPoint.x, nextPoint.y);\n    });\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  }\n};\n\nexport default drawFunctionPoints;\n","export default function addPosition(p1, p2) {\n  return { x: p1.x + p2.x, y: p1.y + p2.y };\n}\n","import _ from \"lodash\";\n\nexport default function originIfUndefined(displacement) {\n  return _.isUndefined(displacement) ? { x: 0, y: 0 } : displacement;\n}\n","import React, { useMemo, useEffect, useRef, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport addPosition from \"../tools/addPosition\";\nimport originIfUndefined from \"../tools/originIfUndefined\";\n\nexport default function FloatingPoint(props) {\n  const initialPosition = useMemo(() => props.point.position, []);\n  const initialAnimationFrameCount = useMemo(\n    () => props.animationFrameCount,\n    []\n  );\n  const absoluteAnimationDisplacementRef = useRef();\n  const relativeAnimationDisplacementRef = useRef();\n\n  const [dragData, setDragData] = useState({\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    deltaY: 0,\n    lastX: 0,\n    lastY: 0,\n  });\n\n  const updatePivotalPoint = () => {\n    const { key } = props.point;\n    const absoluteAnimationDisplacement = originIfUndefined(\n      absoluteAnimationDisplacementRef.current\n    );\n\n    const relativeAnimationDisplacement = originIfUndefined(\n      relativeAnimationDisplacementRef.current\n    );\n\n    const newPosition = addPosition(\n      addPosition(initialPosition, dragData),\n      addPosition(absoluteAnimationDisplacement, relativeAnimationDisplacement)\n    );\n\n    const newPoint = { key, position: newPosition };\n    props.handleDrag(newPoint);\n  };\n\n  const {\n    animated,\n    absoluteAnimation,\n    relativeAnimation,\n    animationFrameCount,\n  } = props;\n\n  useEffect(() => {\n    if (animated) {\n      const absoluteMovement = absoluteAnimation();\n      absoluteAnimationDisplacementRef.current = addPosition(\n        originIfUndefined(absoluteAnimationDisplacementRef.current),\n        absoluteMovement\n      );\n      relativeAnimationDisplacementRef.current = relativeAnimation(\n        animationFrameCount - initialAnimationFrameCount\n      );\n      updatePivotalPoint();\n    }\n  }, [animationFrameCount]);\n\n  const handleDrag = (_event, dragData) => {\n    setDragData(dragData);\n    updatePivotalPoint();\n  };\n\n  const { pointSize, color } = props.pointStyle;\n  const absoluteAnimationDisplacement = originIfUndefined(\n    absoluteAnimationDisplacementRef.current\n  );\n  const relativeAnimationDisplacement = originIfUndefined(\n    relativeAnimationDisplacementRef.current\n  );\n\n  const animationDisplacement = addPosition(\n    relativeAnimationDisplacement,\n    absoluteAnimationDisplacement\n  );\n\n  return (\n    <Draggable onDrag={handleDrag}>\n      <div\n        className=\"drag-wrapper\"\n        style={{\n          position: \"absolute\",\n          left: initialPosition.x + animationDisplacement.x - pointSize,\n          top: initialPosition.y + animationDisplacement.y - pointSize,\n          width: 2 * pointSize,\n          height: 2 * pointSize,\n          borderRadius: \"100%\",\n          background: color,\n          opacity: 0,\n        }}\n      ></div>\n    </Draggable>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport \"./pointCanvas.css\";\n\nfunction drawCoordinates(ctx, x, y, pointStyle) {\n  const { color = \"#ff2626\", pointSize = 10 } = pointStyle;\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.arc(x, y, pointSize, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.stroke();\n}\n\nfunction PointCanvas(props) {\n  const canvasRef = useRef(null);\n  const { draw, pathPoints, points, pointStyle, lineStyle, canvasStyle } =\n    props;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n    draw(context, pathPoints, lineStyle);\n    points.map((point) => {\n      drawCoordinates(context, point.x, point.y, pointStyle);\n    });\n  }, [points, pathPoints]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={canvasStyle.width}\n      height={canvasStyle.height}\n      {...props}\n    />\n  );\n}\n\nexport default PointCanvas;\n","import { SCAN_RATE } from \"../../constant\";\n\nconst pseudoNormalGenerator = (n) => {\n  var randomValue = 0;\n  for (var i = 0; i < n; i++) {\n    randomValue += Math.random();\n  }\n  return (randomValue - n / 2) / (n / 12) ** 2;\n};\n\nexport default function brownianMotion({ sigma }) {\n  return () => {\n    return {\n      x: (sigma * pseudoNormalGenerator(5)) / SCAN_RATE ** 0.5,\n      y: (sigma * pseudoNormalGenerator(5)) / SCAN_RATE ** 0.5,\n    };\n  };\n}\n","import brownianMotion from \"./animations/absoluteAnimations/brownianMotion\";\nimport linear from \"./animations/absoluteAnimations/linear\";\nimport circular from \"./animations/relativeAnimations/circular\";\n\nexport const SCAN_RATE = 60;\n\nexport const ABSOLUTE_ANIMATION_OPTIONS = [\n  { value: () => () => ({ x: 0, y: 0 }), label: \"None\", variable: [] },\n  {\n    value: brownianMotion,\n    label: \"Brownian Motion\",\n    variable: [{ name: \"sigma\", value: 5, type: \"number\" }],\n  },\n  {\n    value: linear,\n    label: \"Linear\",\n    variable: [\n      { name: \"x\", value: 20, type: \"number\" },\n      { name: \"y\", value: 10, type: \"number\" },\n    ],\n  },\n];\n\nexport const RELATIVE_ANIMATION_OPTIONS = [\n  { value: () => () => ({ x: 0, y: 0 }), label: \"None\", variable: [] },\n  {\n    value: circular,\n    label: \"Circular\",\n    variable: [\n      { name: \"radius\", value: 10, type: \"number\" },\n      { name: \"freq\", value: 1, type: \"number\" },\n      { name: \"clockwise\", value: true, type: \"checkbox\" },\n    ],\n  },\n];\n\nexport const INTERPOLATION_OPTIONS = [\n  { value: \"wavy\", label: \"Wavy\" },\n  { value: \"linear\", label: \"Linear\" },\n  { value: \"lagrange\", label: \"Lagrange\" },\n  { value: \"quad_spline\", label: \"Quadratic Spline\" },\n  { value: \"cubic_spline\", label: \"Cubic Spline\" },\n  { value: \"fourth_spline\", label: \"4th Spline\" },\n  { value: \"fifth_spline\", label: \"5th Spline\" },\n  { value: \"akima\", label: \"Akima\" },\n  { value: \"pchip\", label: \"PCHIP\" },\n];\n","import { SCAN_RATE } from \"../../constant\";\n\nexport default function linear(speed) {\n  return () => {\n    return {\n      x: speed.x / SCAN_RATE,\n      y: speed.y / SCAN_RATE,\n    };\n  };\n}\n","import { SCAN_RATE } from \"../../constant\";\n\nexport default function circular({ radius, freq, clockwise }) {\n  return (animationFrameCount) => {\n    const phase = clockwise\n      ? (-2 * Math.PI * freq * animationFrameCount) / SCAN_RATE\n      : (2 * Math.PI * freq * animationFrameCount) / SCAN_RATE;\n\n    return {\n      x: radius * Math.cos(phase) - radius,\n      y: radius * Math.sin(phase),\n    };\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport drawFunctionPoints from \"./drawing/drawFunctionPoints\";\nimport FloatingPoint from \"./components/floatingPoint\";\nimport PointCanvas from \"./canvas/pointCanvas\";\nimport { SCAN_RATE } from \"./constant\";\n\nexport default function PositionSetter(props) {\n  const appendPoint = () => {\n    const { position } = props;\n    props.handleDoubleClick(position);\n  };\n\n  const [animationFrameCount, setAnimationFrameCount] = useState(0);\n\n  const { animated, absoluteAnimation, relativeAnimation, lineWidth, style } =\n    props;\n  const { pointSize } = style;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (animated) {\n        setAnimationFrameCount((prev) => prev + 1);\n      }\n    }, 1000 / SCAN_RATE);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [animated]);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n      }}\n      onDoubleClick={appendPoint}\n    >\n      {props.pivotalPoints.map((point) => {\n        return (\n          <FloatingPoint\n            animated={animated}\n            absoluteAnimation={absoluteAnimation}\n            relativeAnimation={relativeAnimation}\n            animationFrameCount={animationFrameCount}\n            handleDrag={props.handleDrag}\n            point={point}\n            pointStyle={{ pointSize: 10, color: \"yellow\" }}\n          />\n        );\n      })}\n      <PointCanvas\n        draw={drawFunctionPoints}\n        pathPoints={props.plotPoints.path}\n        points={props.plotPoints.pivotal}\n        lineStyle={{ color: \"black\", width: lineWidth }}\n        pointStyle={{ color: \"red\", pointSize: pointSize }}\n        canvasStyle={{ width: 7200, height: 4000 }}\n      />\n    </div>\n  );\n}\n","import _ from \"lodash\";\n\nexport default function emptyArrayIfUndefined(array) {\n  return _.isUndefined(array) ? [] : array;\n}\n","import emptyArrayIfUndefined from \"./emptyArrayIfUndefined\";\n\nexport default function extractVariable(variableRef) {\n  const variable = {};\n  const target = emptyArrayIfUndefined(variableRef.current);\n  target.forEach((singleV) => {\n    variable[singleV.name] = singleV.value;\n  });\n  return variable;\n}\n","import ReactDOM from \"react-dom\";\nimport ReactCursorPosition from \"react-cursor-position\";\nimport Toggle from \"./components/toggleSwitch\";\nimport _ from \"lodash\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { positionParser } from \"./api/parsePoints\";\nimport SelectBox from \"./components/selectBox\";\nimport MultipleInputBox from \"./components/multipleInputBox\";\n\nimport \"./index.css\";\nimport PositionSetter from \"./pointSetter\";\n\nimport emptyArrayIfUndefined from \"./tools/emptyArrayIfUndefined\";\nimport extractVariable from \"./tools/extractVariable\";\n\nimport {\n  ABSOLUTE_ANIMATION_OPTIONS,\n  RELATIVE_ANIMATION_OPTIONS,\n  INTERPOLATION_OPTIONS,\n} from \"./constant\";\n\nconst pivotalPoints = [];\n\nfunction App() {\n  const [animated, setAnimated] = useState(false);\n  const [pivotalP, setPivotalP] = useState([]);\n  const [plotP, setPlotP] = useState({ path: [], pivotal: [] });\n\n  const absoluteAnimationRef = useRef(ABSOLUTE_ANIMATION_OPTIONS[0]);\n  const relativeAnimationRef = useRef(RELATIVE_ANIMATION_OPTIONS[0]);\n  const absoluteAnimationVariableRef = useRef(\n    absoluteAnimationRef.current.variable\n  );\n  const relativeAnimationVariableRef = useRef(\n    relativeAnimationRef.current.variable\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPivotalP([...pivotalPoints]);\n      const plotPosition = rootElement.getAttribute(\"plotPosition\");\n      const plotPositionParsed =\n        plotPosition == null\n          ? { path: [], pivotal: [] }\n          : JSON.parse(plotPosition);\n\n      plotPositionParsed.path = positionParser(plotPositionParsed.path);\n      plotPositionParsed.pivotal = positionParser(plotPositionParsed.pivotal);\n      setPlotP(plotPositionParsed);\n    }, 1000 / 60);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const setAbsoluteAnimationRef = (obj) => {\n    absoluteAnimationRef.current = obj;\n  };\n  const setRelativeAnimationRef = (obj) => {\n    relativeAnimationRef.current = obj;\n  };\n\n  const setAbsoluteAnimationVariableRef = (arr) => {\n    absoluteAnimationVariableRef.current = arr;\n  };\n\n  const setRelativeAnimationVariableRef = (arr) => {\n    relativeAnimationVariableRef.current = arr;\n  };\n\n  useEffect(() => {\n    const newIndex = _.findIndex(\n      ABSOLUTE_ANIMATION_OPTIONS,\n      (o) => o.label === absoluteAnimationRef.current.label\n    );\n\n    setAbsoluteAnimationVariableRef(\n      ABSOLUTE_ANIMATION_OPTIONS[newIndex].variable\n    );\n  }, [absoluteAnimationRef.current]);\n\n  useEffect(() => {\n    const newIndex = _.findIndex(\n      RELATIVE_ANIMATION_OPTIONS,\n      (o) => o.label === relativeAnimationRef.current.label\n    );\n\n    setRelativeAnimationVariableRef(\n      RELATIVE_ANIMATION_OPTIONS[newIndex].variable\n    );\n  }, [relativeAnimationRef.current]);\n\n  const handleDragRef = useRef();\n  handleDragRef.current = (draggedPoint) => {\n    const updateIndex = _.findIndex(\n      pivotalPoints,\n      (p) => p.key === draggedPoint.key\n    );\n    pivotalPoints[updateIndex] = draggedPoint;\n  };\n\n  const handleDoubleClickRef = useRef();\n  handleDoubleClickRef.current = (position) => {\n    const MAX_POINT_NUM = 100;\n    const key = Math.random().toString(36);\n    if (pivotalPoints.length < MAX_POINT_NUM) {\n      pivotalPoints.push({ position, key });\n    }\n  };\n\n  const setInterpolationMethod = (selectedOption) => {\n    document\n      .getElementById(\"root\")\n      .setAttribute(\"interpolationMethod\", selectedOption.value);\n  };\n\n  return (\n    <div>\n      <div class=\"select-container\">\n        <Toggle id=\"1st\" name=\"Animated?\" onToggle={setAnimated} />\n        <div id=\"2nd\">\n          <SelectBox\n            name=\"Absolute Animation\"\n            label=\"absoluteAnimation\"\n            options={ABSOLUTE_ANIMATION_OPTIONS}\n            onChange={setAbsoluteAnimationRef}\n          ></SelectBox>\n          <MultipleInputBox\n            inputsInfo={emptyArrayIfUndefined(\n              absoluteAnimationVariableRef.current\n            )}\n            handleInputChange={setAbsoluteAnimationVariableRef}\n          ></MultipleInputBox>\n        </div>\n        <div id=\"3rd\">\n          <SelectBox\n            name=\"Relative Animation\"\n            label=\"relativeAnimation\"\n            options={RELATIVE_ANIMATION_OPTIONS}\n            onChange={setRelativeAnimationRef}\n          ></SelectBox>\n          <MultipleInputBox\n            inputsInfo={emptyArrayIfUndefined(\n              relativeAnimationVariableRef.current\n            )}\n            handleInputChange={setRelativeAnimationVariableRef}\n          ></MultipleInputBox>\n        </div>\n        <div id=\"4th\">\n          <SelectBox\n            name=\"Interpolation Method\"\n            label=\"interpolationMethod\"\n            options={INTERPOLATION_OPTIONS}\n            onChange={setInterpolationMethod}\n          ></SelectBox>\n        </div>\n      </div>\n\n      <ReactCursorPosition style={{ position: \"absolute\" }}>\n        <PositionSetter\n          style={{ pointSize: 10, lineWidth: 5 }}\n          animated={animated}\n          relativeAnimation={relativeAnimationRef.current.value(\n            extractVariable(relativeAnimationVariableRef)\n          )}\n          absoluteAnimation={absoluteAnimationRef.current.value(\n            extractVariable(absoluteAnimationVariableRef)\n          )}\n          handleDoubleClick={handleDoubleClickRef.current}\n          handleDrag={handleDragRef.current}\n          pivotalPoints={pivotalP}\n          plotPoints={plotP === null ? [] : plotP}\n        />\n      </ReactCursorPosition>\n    </div>\n  );\n}\nconst rootElement = document.getElementById(\"root\");\n\nsetInterval(() => {\n  const str = \"\";\n  rootElement.setAttribute(\n    \"pivotalPosition\",\n    str.concat(\n      \"[\",\n      pivotalPoints\n        .map((point) => JSON.stringify([point.position.x, point.position.y]))\n        .toString(),\n      \"]\"\n    )\n  );\n}, 1000 / 60);\n\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}