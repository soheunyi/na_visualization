{"version":3,"sources":["components/ModernToggle.tsx","components/ModernSelect.tsx","components/ModernInputGroup.tsx","api/parsePoints.js","drawing/drawFunctionPoints.js","tools/addPosition.js","tools/originIfUndefined.js","components/floatingPoint.js","canvas/pointCanvas.tsx","animations/absoluteAnimations/brownianMotion.js","constant.ts","animations/absoluteAnimations/linear.js","animations/relativeAnimations/circular.js","pointSetter.js","tools/extractVariable.js","tools/emptyArrayIfUndefined.js","index.tsx"],"names":["ModernToggle","_ref","label","checked","onChange","className","_jsxs","concat","children","_jsx","onClick","role","tabIndex","onKeyDown","e","key","preventDefault","ModernSelect","options","value","isOpen","setIsOpen","useState","selectedOption","setSelectedOption","find","opt","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","map","option","handleOptionClick","ModernInputGroup","title","inputs","handleInputChange","index","newValue","updatedInputs","input","i","_objectSpread","name","type","parseFloat","step","positionParser","array","pathPoints","length","push","x","y","drawFunctionPoints","ctx","points","style","color","sort","a","b","beginPath","point","nextPoint","moveTo","lineTo","strokeStyle","lineWidth","addPosition","p1","p2","originIfUndefined","displacement","_","isUndefined","FloatingPoint","props","initialPosition","useMemo","position","initialAnimationFrameCount","animationFrameCount","absoluteAnimationDisplacementRef","relativeAnimationDisplacementRef","dragData","setDragData","deltaX","deltaY","lastX","lastY","updatePivotalPoint","absoluteAnimationDisplacement","relativeAnimationDisplacement","newPoint","handleDrag","animated","absoluteAnimation","relativeAnimation","absoluteMovement","pointSize","pointStyle","animationDisplacement","Draggable","onDrag","_event","left","top","borderRadius","background","opacity","PointCanvas","canvasRef","draw","lineStyle","canvasStyle","canvas","context","getContext","clearRect","forEach","fillStyle","arc","Math","PI","drawCoordinates","pseudoNormalGenerator","n","randomValue","random","SCAN_RATE","ABSOLUTE_ANIMATION_OPTIONS","variable","sigma","speed","RELATIVE_ANIMATION_OPTIONS","radius","freq","clockwise","phase","cos","sin","INTERPOLATION_OPTIONS","PositionSetter","setAnimationFrameCount","interval","setInterval","prev","clearInterval","onDoubleClick","appendPoint","handleDoubleClick","pivotalPoints","plotPoints","path","pivotal","extractVariable","variableRef","singleV","App","setAnimated","pivotalP","setPivotalP","plotP","setPlotP","absoluteAnimationRef","relativeAnimationRef","absoluteAnimationVariableRef","relativeAnimationVariableRef","animationFrameId","updateState","rootEl","getElementById","plotPosition","getAttribute","plotPositionParsed","JSON","parse","requestAnimationFrame","cancelAnimationFrame","setAbsoluteAnimationRef","useCallback","obj","setRelativeAnimationRef","setAbsoluteAnimationVariableRef","arr","setRelativeAnimationVariableRef","newIndex","findIndex","o","handleDragRef","draggedPoint","updateIndex","p","handleDoubleClickRef","toString","setInterpolationMethod","setAttribute","handleAbsoluteAnimationChange","animationOption","handleRelativeAnimationChange","_Fragment","ReactCursorPosition","rootElement","updatePivotalPosition","stringify","createRoot","render"],"mappings":"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","file":"static/js/main.8457fe0a.chunk.js","sourcesContent":["import React from 'react';\nimport './ModernToggle.css';\n\ninterface ModernToggleProps {\n  label: string;\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n  className?: string;\n}\n\nconst ModernToggle: React.FC<ModernToggleProps> = ({\n  label,\n  checked,\n  onChange,\n  className = '',\n}) => {\n  return (\n    <div className={`modern-toggle-container ${className}`}>\n      <label className=\"modern-toggle-label\">{label}</label>\n      <div\n        className={`modern-toggle ${checked ? 'modern-toggle--checked' : ''}`}\n        onClick={() => onChange(!checked)}\n        role=\"switch\"\n        aria-checked={checked}\n        tabIndex={0}\n        onKeyDown={(e) => {\n          if (e.key === ' ' || e.key === 'Enter') {\n            e.preventDefault();\n            onChange(!checked);\n          }\n        }}\n      >\n        <div className=\"modern-toggle__track\">\n          <div className=\"modern-toggle__thumb\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModernToggle;","import React, { useState, useRef, useEffect } from 'react';\nimport './ModernSelect.css';\n\ninterface Option {\n  value: string | any;\n  label: string;\n}\n\ninterface ModernSelectProps {\n  label: string;\n  options: Option[];\n  value?: string;\n  onChange: (option: Option) => void;\n  className?: string;\n}\n\nconst ModernSelect: React.FC<ModernSelectProps> = ({\n  label,\n  options,\n  value,\n  onChange,\n  className = '',\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<Option | null>(\n    options.find(opt => typeof opt.value === 'string' ? opt.value === value : opt.label === value) || options[0] || null\n  );\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const handleOptionClick = (option: Option) => {\n    setSelectedOption(option);\n    setIsOpen(false);\n    onChange(option);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    } else if (e.key === 'Escape') {\n      setIsOpen(false);\n    }\n  };\n\n  return (\n    <div className={`modern-select-container ${className}`}>\n      <label className=\"modern-select-label\">{label}</label>\n      <div className=\"modern-select\" ref={dropdownRef}>\n        <div\n          className={`modern-select__trigger ${isOpen ? 'modern-select__trigger--open' : ''}`}\n          onClick={() => setIsOpen(!isOpen)}\n          onKeyDown={handleKeyDown}\n          tabIndex={0}\n          role=\"combobox\"\n          aria-expanded={isOpen}\n          aria-haspopup=\"listbox\"\n        >\n          <span className=\"modern-select__value\">\n            {selectedOption?.label || 'Select option'}\n          </span>\n          <div className=\"modern-select__arrow\">\n            <svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\">\n              <path\n                d=\"M1 1.5L6 6.5L11 1.5\"\n                stroke=\"currentColor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </div>\n        </div>\n        \n        {isOpen && (\n          <div className=\"modern-select__dropdown\">\n            <div className=\"modern-select__options\" role=\"listbox\">\n              {options.map((option) => (\n                <div\n                  key={option.value}\n                  className={`modern-select__option ${\n                    selectedOption?.value === option.value ? 'modern-select__option--selected' : ''\n                  }`}\n                  onClick={() => handleOptionClick(option)}\n                  role=\"option\"\n                  aria-selected={selectedOption?.value === option.value}\n                >\n                  <span className=\"modern-select__option-text\">{option.label}</span>\n                  {selectedOption?.value === option.value && (\n                    <div className=\"modern-select__check\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                        <path\n                          d=\"M13.5 4.5L6 12L2.5 8.5\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"1.5\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                        />\n                      </svg>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModernSelect;","import React from 'react';\nimport './ModernInputGroup.css';\n\ninterface InputConfig {\n  name: string;\n  value: number | boolean;\n  type: 'number' | 'checkbox';\n}\n\ninterface ModernInputGroupProps {\n  title: string;\n  inputs: InputConfig[];\n  onChange: (inputs: InputConfig[]) => void;\n  className?: string;\n}\n\nconst ModernInputGroup: React.FC<ModernInputGroupProps> = ({\n  title,\n  inputs,\n  onChange,\n  className = '',\n}) => {\n  const handleInputChange = (index: number, newValue: number | boolean) => {\n    const updatedInputs = inputs.map((input, i) =>\n      i === index ? { ...input, value: newValue } : input\n    );\n    onChange(updatedInputs);\n  };\n\n  return (\n    <div className={`modern-input-group ${className}`}>\n      <h4 className=\"modern-input-group__title\">{title}</h4>\n      <div className=\"modern-input-group__inputs\">\n        {inputs.map((input, index) => (\n          <div key={input.name} className=\"modern-input-item\">\n            <label className=\"modern-input-label\">{input.name}</label>\n            {input.type === 'number' ? (\n              <input\n                type=\"number\"\n                value={input.value as number}\n                onChange={(e) => handleInputChange(index, parseFloat(e.target.value) || 0)}\n                className=\"modern-number-input\"\n                step=\"any\"\n              />\n            ) : (\n              <div\n                className={`modern-checkbox ${input.value ? 'modern-checkbox--checked' : ''}`}\n                onClick={() => handleInputChange(index, !input.value)}\n                role=\"checkbox\"\n                aria-checked={input.value as boolean}\n                tabIndex={0}\n                onKeyDown={(e) => {\n                  if (e.key === ' ' || e.key === 'Enter') {\n                    e.preventDefault();\n                    handleInputChange(index, !input.value);\n                  }\n                }}\n              >\n                <div className=\"modern-checkbox__box\">\n                  {input.value && (\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\">\n                      <path\n                        d=\"M10 3L4.5 8.5L2 6\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                    </svg>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ModernInputGroup;","export function positionParser(array) {\n  const pathPoints = [];\n\n  for (let i = 0; i < array.length / 2; i++) {\n    pathPoints.push({\n      x: array[2 * i],\n      y: array[2 * i + 1],\n    });\n  }\n\n  return pathPoints;\n}\n","const drawFunctionPoints = (ctx, points, style) => {\n  const { color = 'black', width = 1 } = style;\n\n  function sort_function(a, b) {\n    if (a.x > b.x) return 1;\n    if (a.x < b.x) return -1;\n    if (a.y > b.y) return 1;\n    if (a.y < b.y) return -1;\n  }\n  points.sort(sort_function);\n\n  if (points.length > 1) {\n    ctx.beginPath();\n    points.map((point, index) => {\n      if (index >= points.length - 1) {\n        return;\n      }\n      const nextPoint = points[index + 1];\n      ctx.moveTo(point.x, point.y);\n      ctx.lineTo(nextPoint.x, nextPoint.y);\n    });\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  }\n};\n\nexport default drawFunctionPoints;\n","export default function addPosition(p1, p2) {\n  return { x: p1.x + p2.x, y: p1.y + p2.y };\n}\n","import _ from 'lodash';\n\nexport default function originIfUndefined(displacement) {\n  return _.isUndefined(displacement) ? { x: 0, y: 0 } : displacement;\n}\n","import React, { useMemo, useEffect, useRef, useState } from 'react';\nimport Draggable from 'react-draggable';\nimport addPosition from '../tools/addPosition';\nimport originIfUndefined from '../tools/originIfUndefined';\n\nexport default function FloatingPoint(props) {\n  const initialPosition = useMemo(() => props.point.position, []);\n  const initialAnimationFrameCount = useMemo(\n    () => props.animationFrameCount,\n    []\n  );\n  const absoluteAnimationDisplacementRef = useRef();\n  const relativeAnimationDisplacementRef = useRef();\n\n  const [dragData, setDragData] = useState({\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    deltaY: 0,\n    lastX: 0,\n    lastY: 0,\n  });\n\n  const updatePivotalPoint = () => {\n    const { key } = props.point;\n    const absoluteAnimationDisplacement = originIfUndefined(\n      absoluteAnimationDisplacementRef.current\n    );\n\n    const relativeAnimationDisplacement = originIfUndefined(\n      relativeAnimationDisplacementRef.current\n    );\n\n    const newPosition = addPosition(\n      addPosition(initialPosition, dragData),\n      addPosition(absoluteAnimationDisplacement, relativeAnimationDisplacement)\n    );\n\n    const newPoint = { key, position: newPosition };\n    props.handleDrag(newPoint);\n  };\n\n  const {\n    animated,\n    absoluteAnimation,\n    relativeAnimation,\n    animationFrameCount,\n  } = props;\n\n  useEffect(() => {\n    if (animated) {\n      const absoluteMovement = absoluteAnimation();\n      absoluteAnimationDisplacementRef.current = addPosition(\n        originIfUndefined(absoluteAnimationDisplacementRef.current),\n        absoluteMovement\n      );\n      relativeAnimationDisplacementRef.current = relativeAnimation(\n        animationFrameCount - initialAnimationFrameCount\n      );\n      updatePivotalPoint();\n    }\n  }, [animationFrameCount]);\n\n  const handleDrag = (_event, dragData) => {\n    setDragData(dragData);\n    updatePivotalPoint();\n  };\n\n  const { pointSize, color } = props.pointStyle;\n  const absoluteAnimationDisplacement = originIfUndefined(\n    absoluteAnimationDisplacementRef.current\n  );\n  const relativeAnimationDisplacement = originIfUndefined(\n    relativeAnimationDisplacementRef.current\n  );\n\n  const animationDisplacement = addPosition(\n    relativeAnimationDisplacement,\n    absoluteAnimationDisplacement\n  );\n\n  return (\n    <Draggable onDrag={handleDrag}>\n      <div\n        className=\"drag-wrapper\"\n        style={{\n          position: 'absolute',\n          left: initialPosition.x + animationDisplacement.x - pointSize,\n          top: initialPosition.y + animationDisplacement.y - pointSize,\n          width: 2 * pointSize,\n          height: 2 * pointSize,\n          borderRadius: '100%',\n          background: color,\n          opacity: 0,\n        }}\n      ></div>\n    </Draggable>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport './pointCanvas.css';\nimport { Position, PointStyle, LineStyle, CanvasStyle } from '../types';\n\nfunction drawCoordinates(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  pointStyle: PointStyle\n) {\n  const { color = '#ff2626', pointSize = 10 } = pointStyle;\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.arc(x, y, pointSize, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.stroke();\n}\n\ninterface PointCanvasProps {\n  draw: (\n    ctx: CanvasRenderingContext2D,\n    pathPoints: Position[],\n    lineStyle: LineStyle\n  ) => void;\n  pathPoints: Position[];\n  points: Position[];\n  pointStyle: PointStyle;\n  lineStyle: LineStyle;\n  canvasStyle: CanvasStyle;\n  [key: string]: any;\n}\n\nfunction PointCanvas(props: PointCanvasProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const { draw, pathPoints, points, pointStyle, lineStyle, canvasStyle } =\n    props;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const context = canvas.getContext('2d');\n    if (!context) return;\n\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n    draw(context, pathPoints, lineStyle);\n    points.forEach(point => {\n      drawCoordinates(context, point.x, point.y, pointStyle);\n    });\n  }, [draw, points, pathPoints, pointStyle, lineStyle]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={canvasStyle.width}\n      height={canvasStyle.height}\n      {...props}\n    />\n  );\n}\n\nexport default PointCanvas;\n","import { SCAN_RATE } from \"../../constant\";\n\nconst pseudoNormalGenerator = (n) => {\n  var randomValue = 0;\n  for (var i = 0; i < n; i++) {\n    randomValue += Math.random();\n  }\n  return (randomValue - n / 2) / (n / 12) ** 2;\n};\n\nexport default function brownianMotion({ sigma }) {\n  return () => {\n    return {\n      x: (sigma * pseudoNormalGenerator(5)) / SCAN_RATE ** 0.5,\n      y: (sigma * pseudoNormalGenerator(5)) / SCAN_RATE ** 0.5,\n    };\n  };\n}\n","import brownianMotion from './animations/absoluteAnimations/brownianMotion';\nimport linear from './animations/absoluteAnimations/linear';\nimport circular from './animations/relativeAnimations/circular';\nimport { AnimationOption, InterpolationOption } from './types';\n\nexport const SCAN_RATE = 60;\n\nexport const ABSOLUTE_ANIMATION_OPTIONS: AnimationOption[] = [\n  { value: () => () => ({ x: 0, y: 0 }), label: \"None\", variable: [] },\n  {\n    value: brownianMotion,\n    label: \"Brownian Motion\",\n    variable: [{ name: \"sigma\", value: 5, type: \"number\" }],\n  },\n  {\n    value: linear,\n    label: \"Linear\",\n    variable: [\n      { name: \"x\", value: 20, type: \"number\" },\n      { name: \"y\", value: 10, type: \"number\" },\n    ],\n  },\n];\n\nexport const RELATIVE_ANIMATION_OPTIONS: AnimationOption[] = [\n  { value: () => () => ({ x: 0, y: 0 }), label: \"None\", variable: [] },\n  {\n    value: circular,\n    label: \"Circular\",\n    variable: [\n      { name: \"radius\", value: 10, type: \"number\" },\n      { name: \"freq\", value: 1, type: \"number\" },\n      { name: \"clockwise\", value: true, type: \"checkbox\" },\n    ],\n  },\n];\n\nexport const INTERPOLATION_OPTIONS: InterpolationOption[] = [\n  { value: \"wavy\", label: \"Wavy\" },\n  { value: \"linear\", label: \"Linear\" },\n  { value: \"lagrange\", label: \"Lagrange\" },\n  { value: \"quad_spline\", label: \"Quadratic Spline\" },\n  { value: \"cubic_spline\", label: \"Cubic Spline\" },\n  { value: \"fourth_spline\", label: \"4th Spline\" },\n  { value: \"fifth_spline\", label: \"5th Spline\" },\n  { value: \"akima\", label: \"Akima\" },\n  { value: \"pchip\", label: \"PCHIP\" },\n];\n","import { SCAN_RATE } from \"../../constant\";\n\nexport default function linear(speed) {\n  return () => {\n    return {\n      x: speed.x / SCAN_RATE,\n      y: speed.y / SCAN_RATE,\n    };\n  };\n}\n","import { SCAN_RATE } from \"../../constant\";\n\nexport default function circular({ radius, freq, clockwise }) {\n  return (animationFrameCount) => {\n    const phase = clockwise\n      ? (-2 * Math.PI * freq * animationFrameCount) / SCAN_RATE\n      : (2 * Math.PI * freq * animationFrameCount) / SCAN_RATE;\n\n    return {\n      x: radius * Math.cos(phase) - radius,\n      y: radius * Math.sin(phase),\n    };\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport drawFunctionPoints from \"./drawing/drawFunctionPoints\";\nimport FloatingPoint from \"./components/floatingPoint\";\nimport PointCanvas from \"./canvas/pointCanvas\";\nimport { SCAN_RATE } from \"./constant\";\n\nexport default function PositionSetter(props) {\n  const appendPoint = () => {\n    const { position } = props;\n    props.handleDoubleClick(position);\n  };\n\n  const [animationFrameCount, setAnimationFrameCount] = useState(0);\n\n  const { animated, absoluteAnimation, relativeAnimation, lineWidth, style } =\n    props;\n  const { pointSize } = style;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (animated) {\n        setAnimationFrameCount((prev) => prev + 1);\n      }\n    }, 1000 / SCAN_RATE);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [animated]);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n      }}\n      onDoubleClick={appendPoint}\n    >\n      {props.pivotalPoints.map((point) => {\n        return (\n          <FloatingPoint\n            animated={animated}\n            absoluteAnimation={absoluteAnimation}\n            relativeAnimation={relativeAnimation}\n            animationFrameCount={animationFrameCount}\n            handleDrag={props.handleDrag}\n            point={point}\n            pointStyle={{ pointSize: 10, color: \"yellow\" }}\n          />\n        );\n      })}\n      <PointCanvas\n        draw={drawFunctionPoints}\n        pathPoints={props.plotPoints.path}\n        points={props.plotPoints.pivotal}\n        lineStyle={{ color: \"black\", width: lineWidth }}\n        pointStyle={{ color: \"red\", pointSize: pointSize }}\n        canvasStyle={{ width: 7200, height: 4000 }}\n      />\n    </div>\n  );\n}\n","import emptyArrayIfUndefined from './emptyArrayIfUndefined';\n\nexport default function extractVariable(variableRef) {\n  const variable = {};\n  const target = emptyArrayIfUndefined(variableRef.current);\n  target.forEach(singleV => {\n    variable[singleV.name] = singleV.value;\n  });\n  return variable;\n}\n","import _ from 'lodash';\n\nexport default function emptyArrayIfUndefined(array) {\n  return _.isUndefined(array) ? [] : array;\n}\n","import { createRoot } from 'react-dom/client';\nimport ReactCursorPosition from 'react-cursor-position';\nimport ModernToggle from './components/ModernToggle';\nimport ModernSelect from './components/ModernSelect';\nimport ModernInputGroup from './components/ModernInputGroup';\nimport _ from 'lodash';\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { positionParser } from './api/parsePoints';\n\nimport './index.css';\nimport './styles/modern-ui.css';\nimport PositionSetter from './pointSetter';\n\nimport emptyArrayIfUndefined from './tools/emptyArrayIfUndefined';\nimport extractVariable from './tools/extractVariable';\n\nimport {\n  ABSOLUTE_ANIMATION_OPTIONS,\n  RELATIVE_ANIMATION_OPTIONS,\n  INTERPOLATION_OPTIONS,\n} from './constant';\nimport { Point, PlotPosition, AnimationOption } from './types';\n\nconst pivotalPoints: Point[] = [];\n\nfunction App() {\n  const [animated, setAnimated] = useState<boolean>(false);\n  const [pivotalP, setPivotalP] = useState<Point[]>([]);\n  const [plotP, setPlotP] = useState<PlotPosition>({ path: [], pivotal: [] });\n\n  const absoluteAnimationRef = useRef<AnimationOption>(ABSOLUTE_ANIMATION_OPTIONS[0]);\n  const relativeAnimationRef = useRef<AnimationOption>(RELATIVE_ANIMATION_OPTIONS[0]);\n  const absoluteAnimationVariableRef = useRef(\n    absoluteAnimationRef.current.variable\n  );\n  const relativeAnimationVariableRef = useRef(\n    relativeAnimationRef.current.variable\n  );\n\n  useEffect(() => {\n    let animationFrameId: number;\n    \n    const updateState = () => {\n      setPivotalP([...pivotalPoints]);\n      const rootEl = document.getElementById('root');\n      if (rootEl) {\n        const plotPosition = rootEl.getAttribute('plotPosition');\n        const plotPositionParsed =\n          plotPosition == null\n            ? { path: [], pivotal: [] }\n            : JSON.parse(plotPosition);\n\n        plotPositionParsed.path = positionParser(plotPositionParsed.path);\n        plotPositionParsed.pivotal = positionParser(plotPositionParsed.pivotal);\n        setPlotP(plotPositionParsed);\n      }\n      animationFrameId = requestAnimationFrame(updateState);\n    };\n\n    animationFrameId = requestAnimationFrame(updateState);\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  const setAbsoluteAnimationRef = useCallback((obj: AnimationOption) => {\n    absoluteAnimationRef.current = obj;\n  }, []);\n  \n  const setRelativeAnimationRef = useCallback((obj: AnimationOption) => {\n    relativeAnimationRef.current = obj;\n  }, []);\n\n  const setAbsoluteAnimationVariableRef = useCallback((arr: any) => {\n    absoluteAnimationVariableRef.current = arr;\n  }, []);\n\n  const setRelativeAnimationVariableRef = useCallback((arr: any) => {\n    relativeAnimationVariableRef.current = arr;\n  }, []);\n\n  useEffect(() => {\n    const newIndex = _.findIndex(\n      ABSOLUTE_ANIMATION_OPTIONS,\n      (o) => o.label === absoluteAnimationRef.current.label\n    );\n\n    setAbsoluteAnimationVariableRef(\n      ABSOLUTE_ANIMATION_OPTIONS[newIndex].variable\n    );\n  }, [absoluteAnimationRef.current]);\n\n  useEffect(() => {\n    const newIndex = _.findIndex(\n      RELATIVE_ANIMATION_OPTIONS,\n      (o) => o.label === relativeAnimationRef.current.label\n    );\n\n    setRelativeAnimationVariableRef(\n      RELATIVE_ANIMATION_OPTIONS[newIndex].variable\n    );\n  }, [relativeAnimationRef.current]);\n\n  const handleDragRef = useRef<(draggedPoint: Point) => void>();\n  handleDragRef.current = useCallback((draggedPoint: Point) => {\n    const updateIndex = _.findIndex(\n      pivotalPoints,\n      (p) => p.key === draggedPoint.key\n    );\n    if (updateIndex !== -1) {\n      pivotalPoints[updateIndex] = draggedPoint;\n    }\n  }, []);\n\n  const handleDoubleClickRef = useRef<(position: { x: number; y: number }) => void>();\n  handleDoubleClickRef.current = useCallback((position: { x: number; y: number }) => {\n    const MAX_POINT_NUM = 100;\n    const key = Math.random().toString(36);\n    if (pivotalPoints.length < MAX_POINT_NUM) {\n      pivotalPoints.push({ position, key });\n    }\n  }, []);\n\n  const setInterpolationMethod = useCallback((selectedOption: { value: string }) => {\n    const rootEl = document.getElementById('root');\n    if (rootEl) {\n      rootEl.setAttribute('interpolationMethod', selectedOption.value);\n    }\n  }, []);\n\n  const handleAbsoluteAnimationChange = useCallback((option: { value: any; label: string }) => {\n    const animationOption = ABSOLUTE_ANIMATION_OPTIONS.find(opt => opt.label === option.label);\n    if (animationOption) {\n      setAbsoluteAnimationRef(animationOption);\n    }\n  }, [setAbsoluteAnimationRef]);\n\n  const handleRelativeAnimationChange = useCallback((option: { value: any; label: string }) => {\n    const animationOption = RELATIVE_ANIMATION_OPTIONS.find(opt => opt.label === option.label);\n    if (animationOption) {\n      setRelativeAnimationRef(animationOption);\n    }\n  }, [setRelativeAnimationRef]);\n\n  return (\n    <div>\n      <div className=\"modern-controls-container\">\n        <div className=\"controls-section\">\n          <ModernToggle\n            label=\"Animation\"\n            checked={animated}\n            onChange={setAnimated}\n          />\n        </div>\n        \n        <div className=\"controls-section\">\n          <ModernSelect\n            label=\"Interpolation Method\"\n            options={INTERPOLATION_OPTIONS}\n            onChange={setInterpolationMethod}\n          />\n        </div>\n        \n        {animated && (\n          <>\n            <div className=\"controls-section\">\n              <ModernSelect\n                label=\"Absolute Animation\"\n                options={ABSOLUTE_ANIMATION_OPTIONS}\n                onChange={handleAbsoluteAnimationChange}\n              />\n              {absoluteAnimationVariableRef.current.length > 0 && (\n                <ModernInputGroup\n                  title=\"Parameters\"\n                  inputs={absoluteAnimationVariableRef.current}\n                  onChange={setAbsoluteAnimationVariableRef}\n                />\n              )}\n            </div>\n            \n            <div className=\"controls-section\">\n              <ModernSelect\n                label=\"Relative Animation\"\n                options={RELATIVE_ANIMATION_OPTIONS}\n                onChange={handleRelativeAnimationChange}\n              />\n              {relativeAnimationVariableRef.current.length > 0 && (\n                <ModernInputGroup\n                  title=\"Parameters\"\n                  inputs={relativeAnimationVariableRef.current}\n                  onChange={setRelativeAnimationVariableRef}\n                />\n              )}\n            </div>\n          </>\n        )}\n      </div>\n\n      <ReactCursorPosition style={{ position: \"absolute\" }}>\n        <PositionSetter\n          style={{ pointSize: 10, lineWidth: 5 }}\n          animated={animated}\n          relativeAnimation={relativeAnimationRef.current.value(\n            extractVariable(relativeAnimationVariableRef)\n          )}\n          absoluteAnimation={absoluteAnimationRef.current.value(\n            extractVariable(absoluteAnimationVariableRef)\n          )}\n          handleDoubleClick={handleDoubleClickRef.current}\n          handleDrag={handleDragRef.current}\n          pivotalPoints={pivotalP}\n          plotPoints={plotP === null ? [] : plotP}\n        />\n      </ReactCursorPosition>\n    </div>\n  );\n}\nconst rootElement = document.getElementById('root');\n\nif (rootElement) {\n  let animationFrameId: number;\n  \n  const updatePivotalPosition = () => {\n    const str = '';\n    rootElement.setAttribute(\n      'pivotalPosition',\n      str.concat(\n        '[',\n        pivotalPoints\n          .map((point) => JSON.stringify([point.position.x, point.position.y]))\n          .toString(),\n        ']'\n      )\n    );\n    animationFrameId = requestAnimationFrame(updatePivotalPosition);\n  };\n  \n  updatePivotalPosition();\n  \n  const root = createRoot(rootElement);\n  root.render(<App />);\n}\n"],"sourceRoot":""}