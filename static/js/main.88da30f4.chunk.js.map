{"version":3,"sources":["components/toggleSwitch.js","api/parsePoints.js","components/selectBox.js","components/inputBox.js","components/multipleInputBox.js","drawing/drawFunctionPoints.js","tools/addPosition.js","tools/originIfUndefined.js","components/floatingPoint.js","canvas/pointCanvas.tsx","animations/absoluteAnimations/brownianMotion.js","constant.ts","animations/absoluteAnimations/linear.js","animations/relativeAnimations/circular.js","pointSetter.js","tools/emptyArrayIfUndefined.js","tools/extractVariable.js","index.tsx"],"names":["Toggle","props","toggle","useRef","checkbox","_jsxs","_objectSpread","children","_jsx","name","ref","className","type","defaultChecked","value","onClick","onChange","current","checked","classList","onToggle","positionParser","array","pathPoints","i","length","push","x","y","SelectBox","Select","options","selectedOption","InputBox","onSubmit","event","preventDefault","inputElement","document","getElementById","concat","handleInputChange","Number","style","padding","id","target","MultipleInputBox","inputChange","newInputsInfo","inputsInfo","_","findIndex","info","class","map","drawFunctionPoints","ctx","points","color","width","sort","a","b","beginPath","point","index","nextPoint","moveTo","lineTo","strokeStyle","lineWidth","stroke","addPosition","p1","p2","originIfUndefined","displacement","isUndefined","FloatingPoint","initialPosition","useMemo","position","initialAnimationFrameCount","animationFrameCount","absoluteAnimationDisplacementRef","relativeAnimationDisplacementRef","dragData","setDragData","useState","deltaX","deltaY","lastX","lastY","updatePivotalPoint","key","absoluteAnimationDisplacement","relativeAnimationDisplacement","newPoint","handleDrag","animated","absoluteAnimation","relativeAnimation","useEffect","absoluteMovement","pointSize","pointStyle","animationDisplacement","Draggable","onDrag","_event","left","top","height","borderRadius","background","opacity","PointCanvas","canvasRef","draw","lineStyle","canvasStyle","canvas","context","getContext","clearRect","forEach","fillStyle","arc","Math","PI","fill","drawCoordinates","pseudoNormalGenerator","n","randomValue","random","SCAN_RATE","ABSOLUTE_ANIMATION_OPTIONS","label","variable","_ref","sigma","speed","RELATIVE_ANIMATION_OPTIONS","radius","freq","clockwise","phase","cos","sin","INTERPOLATION_OPTIONS","PositionSetter","setAnimationFrameCount","interval","setInterval","prev","clearInterval","onDoubleClick","appendPoint","handleDoubleClick","pivotalPoints","plotPoints","path","pivotal","emptyArrayIfUndefined","extractVariable","variableRef","singleV","App","setAnimated","pivotalP","setPivotalP","plotP","setPlotP","absoluteAnimationRef","relativeAnimationRef","absoluteAnimationVariableRef","relativeAnimationVariableRef","animationFrameId","updateState","rootEl","plotPosition","getAttribute","plotPositionParsed","JSON","parse","requestAnimationFrame","cancelAnimationFrame","setAbsoluteAnimationRef","useCallback","obj","setRelativeAnimationRef","setAbsoluteAnimationVariableRef","arr","setRelativeAnimationVariableRef","newIndex","o","handleDragRef","draggedPoint","updateIndex","p","handleDoubleClickRef","toString","setInterpolationMethod","setAttribute","ReactCursorPosition","rootElement","updatePivotalPosition","stringify","createRoot","render"],"mappings":"4NASe,SAASA,EAAOC,GAC7B,MAAMC,EAASC,mBACTC,EAAWD,mBAOjB,OACEE,eAAA,MAAAC,wBAAA,GAASL,GAAK,IAAAM,SAAA,CACZC,cAAA,KAAAD,SAAIN,EAAMQ,OACVD,cAAA,SACEE,IAAKN,EACLK,KAAMR,EAAMQ,KACZE,UAAU,kBACVC,KAAK,WACLC,eAAgBZ,EAAMa,MACtBA,MAAOb,EAAMa,QAAS,IAExBN,cAAA,QACEE,IAAKR,EACLa,QAnBN,WACMd,EAAMe,UAAUf,EAAMe,SAASZ,EAASa,QAAQC,SACpDhB,EAAOe,QAAQE,UAAUjB,OAAO,WAChCE,EAASa,QAAQC,SAAWd,EAASa,QAAQC,QACzCjB,EAAMmB,UAAUnB,EAAMmB,SAAShB,EAASa,QAAQC,QACtD,EAeMP,UAAWV,EAAMiB,QAAU,wBAA0B,gBAAgBX,SAErEC,cAAA,QAAMG,UAAU,gBAIxB,C,oBCtCO,SAASU,EAAeC,GAC7B,MAAMC,EAAa,GAEnB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMG,OAAS,EAAGD,IACpCD,EAAWG,KAAK,CACdC,EAAGL,EAAM,EAAIE,GACbI,EAAGN,EAAM,EAAIE,EAAI,KAIrB,OAAOD,CACT,C,YCTe,SAASM,EAAU5B,GAKhC,OACEI,eAAA,MAAAC,wBAAA,GAASL,GAAK,IAAAM,SAAA,CACZC,cAAA,KAAAD,SAAIN,EAAMQ,OACVD,cAACsB,IAAM,CAACC,QAAS9B,EAAM8B,QAASf,SAPnBgB,IACf/B,EAAMe,SAASgB,SASnB,CCbe,SAASC,EAAShC,GAyB/B,OACEO,cAAA,QAAM0B,SAdaC,IACnBA,EAAMC,iBACN,MAAMC,EAAeC,SAASC,eAC5BtC,EAAMQ,KAAK+B,OAAO,gBAGpBvC,EAAMwC,kBAAkB,CACtBhC,KAAM4B,EAAa5B,KACnBK,MAAO4B,OAAOL,EAAavB,OAC3BF,KAAMyB,EAAazB,QAKS+B,MAAO,CAAEC,QAAS,MAAOrC,SACrDF,eAAA,SAAAE,SAAA,CACGN,EAAMQ,KACPD,cAAA,SACAA,cAAA,SACEqC,GAAI5C,EAAMQ,KAAK+B,OAAO,eACtB5B,KAAMX,EAAMW,KACZH,KAAMR,EAAMQ,KACZO,SAjCqBmB,IAC3B,MAAMW,EAASX,EAAMW,OACD,aAAhBA,EAAOlC,MACTX,EAAMwC,kBAAkB,CACtBhC,KAAMqC,EAAOrC,KACbK,OAAQgC,EAAO5B,QACfN,KAAMkC,EAAOlC,cAgCrB,CCpCe,SAASmC,EAAiB9C,GACvC,SAASwC,EAAkBO,GACzB,MAAMC,EAAgB,IAAIhD,EAAMiD,YAKhCD,EAJoBE,IAAEC,UACpBnD,EAAMiD,WACNG,GAAQA,EAAK5C,OAASuC,EAAYvC,OAEPuC,EAC7B/C,EAAMwC,kBAAkBQ,EAC1B,CAEA,OACEzC,cAAA,OAAK8C,MAAM,qBAAoB/C,SAC5BN,EAAMiD,WAAWK,IAAIF,GACpB7C,cAACyB,EAAQ,CACPQ,kBAAmBA,EACnB7B,KAAMyC,EAAKzC,KACXH,KAAM4C,EAAK5C,SAKrB,C,MCEe+C,MA3BYA,CAACC,EAAKC,EAAQf,KACvC,MAAM,MAAEgB,EAAQ,QAAO,MAAEC,EAAQ,GAAMjB,EAQvCe,EAAOG,KANP,SAAuBC,EAAGC,GACxB,OAAID,EAAEnC,EAAIoC,EAAEpC,EAAU,EAClBmC,EAAEnC,EAAIoC,EAAEpC,GAAW,EACnBmC,EAAElC,EAAImC,EAAEnC,EAAU,EAClBkC,EAAElC,EAAImC,EAAEnC,GAAW,OAAvB,CACF,GAGI8B,EAAOjC,OAAS,IAClBgC,EAAIO,YACJN,EAAOH,IAAI,CAACU,EAAOC,KACjB,GAAIA,GAASR,EAAOjC,OAAS,EAC3B,OAEF,MAAM0C,EAAYT,EAAOQ,EAAQ,GACjCT,EAAIW,OAAOH,EAAMtC,EAAGsC,EAAMrC,GAC1B6B,EAAIY,OAAOF,EAAUxC,EAAGwC,EAAUvC,KAEpC6B,EAAIa,YAAcX,EAClBF,EAAIc,UAAYX,EAChBH,EAAIe,W,iBCvBO,SAASC,EAAYC,EAAIC,GACtC,MAAO,CAAEhD,EAAG+C,EAAG/C,EAAIgD,EAAGhD,EAAGC,EAAG8C,EAAG9C,EAAI+C,EAAG/C,EACxC,CCAe,SAASgD,EAAkBC,GACxC,OAAO1B,IAAE2B,YAAYD,GAAgB,CAAElD,EAAG,EAAGC,EAAG,GAAMiD,CACxD,CCCe,SAASE,EAAc9E,GACpC,MAAM+E,EAAkBC,kBAAQ,IAAMhF,EAAMgE,MAAMiB,SAAU,IACtDC,EAA6BF,kBACjC,IAAMhF,EAAMmF,oBACZ,IAEIC,EAAmClF,mBACnCmF,EAAmCnF,oBAElCoF,EAAUC,GAAeC,mBAAS,CACvC9D,EAAG,EACHC,EAAG,EACH8D,OAAQ,EACRC,OAAQ,EACRC,MAAO,EACPC,MAAO,IAGHC,EAAqBA,KACzB,MAAM,IAAEC,GAAQ9F,EAAMgE,MAChB+B,EAAgCpB,EACpCS,EAAiCpE,SAG7BgF,EAAgCrB,EACpCU,EAAiCrE,SAQ7BiF,EAAW,CAAEH,MAAKb,SALJT,EAClBA,EAAYO,EAAiBO,GAC7Bd,EAAYuB,EAA+BC,KAI7ChG,EAAMkG,WAAWD,KAGb,SACJE,EAAQ,kBACRC,EAAiB,kBACjBC,EAAiB,oBACjBlB,GACEnF,EAEJsG,oBAAU,KACR,GAAIH,EAAU,CACZ,MAAMI,EAAmBH,IACzBhB,EAAiCpE,QAAUwD,EACzCG,EAAkBS,EAAiCpE,SACnDuF,GAEFlB,EAAiCrE,QAAUqF,EACzClB,EAAsBD,GAExBW,GACF,GACC,CAACV,IAEJ,MAKM,UAAEqB,EAAS,MAAE9C,GAAU1D,EAAMyG,WAC7BV,EAAgCpB,EACpCS,EAAiCpE,SAM7B0F,EAAwBlC,EAJQG,EACpCU,EAAiCrE,SAKjC+E,GAGF,OACExF,cAACoG,IAAS,CAACC,OAnBMV,CAACW,EAAQvB,KAC1BC,EAAYD,GACZO,KAiB8BvF,SAC5BC,cAAA,OACEG,UAAU,eACVgC,MAAO,CACLuC,SAAU,WACV6B,KAAM/B,EAAgBrD,EAAIgF,EAAsBhF,EAAI8E,EACpDO,IAAKhC,EAAgBpD,EAAI+E,EAAsB/E,EAAI6E,EACnD7C,MAAO,EAAI6C,EACXQ,OAAQ,EAAIR,EACZS,aAAc,OACdC,WAAYxD,EACZyD,QAAS,MAKnB,C,MCpCeC,MA9Bf,SAAqBpH,GACnB,MAAMqH,EAAYnH,iBAA0B,OACtC,KAAEoH,EAAI,WAAEhG,EAAU,OAAEmC,EAAM,WAAEgD,EAAU,UAAEc,EAAS,YAAEC,GACvDxH,EAiBF,OAfAsG,oBAAU,KACR,MAAMmB,EAASJ,EAAUrG,QACzB,IAAKyG,EAAQ,OAEb,MAAMC,EAAUD,EAAOE,WAAW,MAC7BD,IAELA,EAAQE,UAAU,EAAG,EAAGF,EAAQD,OAAO9D,MAAO+D,EAAQD,OAAOT,QAE7DM,EAAKI,EAASpG,EAAYiG,GAC1B9D,EAAOoE,QAAQ7D,KA3CnB,SACER,EACA9B,EACAC,EACA8E,GAEA,MAAM,MAAE/C,EAAQ,UAAS,UAAE8C,EAAY,IAAOC,EAC9CjD,EAAIO,YACJP,EAAIsE,UAAYpE,EAChBF,EAAIuE,IAAIrG,EAAGC,EAAG6E,EAAW,EAAG,EAAIwB,KAAKC,IACrCzE,EAAI0E,OACJ1E,EAAIe,QACN,CAgCM4D,CAAgBT,EAAS1D,EAAMtC,EAAGsC,EAAMrC,EAAG8E,OAE5C,CAACa,EAAM7D,EAAQnC,EAAYmF,EAAYc,IAGxChH,cAAA,SAAAF,YAAA,CACEI,IAAK4G,EACL1D,MAAO6D,EAAY7D,MACnBqD,OAAQQ,EAAYR,QAChBhH,GAGV,EC1DA,MAAMoI,EAAyBC,IAE7B,IADA,IAAIC,EAAc,EACT/G,EAAI,EAAGA,EAAI8G,EAAG9G,IACrB+G,GAAeN,KAAKO,SAEtB,OAAQD,EAAcD,EAAI,IAAMA,EAAI,KAAO,GCFtC,MAAMG,EAAY,GAEZC,EAAgD,CAC3D,CAAE5H,MAAOA,IAAM,MAASa,EAAG,EAAGC,EAAG,IAAM+G,MAAO,OAAQC,SAAU,IAChE,CACE9H,MDAW,SAAuB+H,GAAa,IAAZ,MAAEC,GAAOD,EAC9C,MAAO,KACE,CACLlH,EAAImH,EAAQT,EAAsB,GAAMI,GAAa,GACrD7G,EAAIkH,EAAQT,EAAsB,GAAMI,GAAa,IAG3D,ECNIE,MAAO,kBACPC,SAAU,CAAC,CAAEnI,KAAM,QAASK,MAAO,EAAGF,KAAM,YAE9C,CACEE,MCbW,SAAgBiI,GAC7B,MAAO,KACE,CACLpH,EAAGoH,EAAMpH,EAAI8G,EACb7G,EAAGmH,EAAMnH,EAAI6G,GAGnB,EDOIE,MAAO,SACPC,SAAU,CACR,CAAEnI,KAAM,IAAKK,MAAO,GAAIF,KAAM,UAC9B,CAAEH,KAAM,IAAKK,MAAO,GAAIF,KAAM,aAKvBoI,EAAgD,CAC3D,CAAElI,MAAOA,IAAM,MAASa,EAAG,EAAGC,EAAG,IAAM+G,MAAO,OAAQC,SAAU,IAChE,CACE9H,MEzBW,SAAiB+H,GAA+B,IAA9B,OAAEI,EAAM,KAAEC,EAAI,UAAEC,GAAWN,EAC1D,OAAQzD,IACN,MAAMgE,EAAQD,GACR,EAAIlB,KAAKC,GAAKgB,EAAO9D,EAAuBqD,EAC7C,EAAIR,KAAKC,GAAKgB,EAAO9D,EAAuBqD,EAEjD,MAAO,CACL9G,EAAGsH,EAAShB,KAAKoB,IAAID,GAASH,EAC9BrH,EAAGqH,EAAShB,KAAKqB,IAAIF,IAG3B,EFeIT,MAAO,WACPC,SAAU,CACR,CAAEnI,KAAM,SAAUK,MAAO,GAAIF,KAAM,UACnC,CAAEH,KAAM,OAAQK,MAAO,EAAGF,KAAM,UAChC,CAAEH,KAAM,YAAaK,OAAO,EAAMF,KAAM,eAKjC2I,EAA+C,CAC1D,CAAEzI,MAAO,OAAQ6H,MAAO,QACxB,CAAE7H,MAAO,SAAU6H,MAAO,UAC1B,CAAE7H,MAAO,WAAY6H,MAAO,YAC5B,CAAE7H,MAAO,cAAe6H,MAAO,oBAC/B,CAAE7H,MAAO,eAAgB6H,MAAO,gBAChC,CAAE7H,MAAO,gBAAiB6H,MAAO,cACjC,CAAE7H,MAAO,eAAgB6H,MAAO,cAChC,CAAE7H,MAAO,QAAS6H,MAAO,SACzB,CAAE7H,MAAO,QAAS6H,MAAO,UGxCZ,SAASa,EAAevJ,GACrC,MAKOmF,EAAqBqE,GAA0BhE,mBAAS,IAEzD,SAAEW,EAAQ,kBAAEC,EAAiB,kBAAEC,EAAiB,UAAE/B,EAAS,MAAE5B,GACjE1C,GACI,UAAEwG,GAAc9D,EAatB,OAZA4D,oBAAU,KACR,MAAMmD,EAAWC,YAAY,KACvBvD,GACFqD,EAAwBG,GAASA,EAAO,IAEzC,IAAOnB,GAEV,MAAO,KACLoB,cAAcH,KAEf,CAACtD,IAGF/F,eAAA,OACEsC,MAAO,CACLuC,SAAU,WACV+B,OAAQ,OACRrD,MAAO,QAETkG,cA7BgBC,KAClB,MAAM,SAAE7E,GAAajF,EACrBA,EAAM+J,kBAAkB9E,IA2BK3E,SAAA,CAE1BN,EAAMgK,cAAc1G,IAAKU,GAEtBzD,cAACuE,EAAa,CACZqB,SAAUA,EACVC,kBAAmBA,EACnBC,kBAAmBA,EACnBlB,oBAAqBA,EACrBe,WAAYlG,EAAMkG,WAClBlC,MAAOA,EACPyC,WAAY,CAAED,UAAW,GAAI9C,MAAO,aAI1CnD,cAAC6G,EAAW,CACVE,KAAM/D,EACNjC,WAAYtB,EAAMiK,WAAWC,KAC7BzG,OAAQzD,EAAMiK,WAAWE,QACzB5C,UAAW,CAAE7D,MAAO,QAASC,MAAOW,GACpCmC,WAAY,CAAE/C,MAAO,MAAO8C,UAAWA,GACvCgB,YAAa,CAAE7D,MAAO,KAAMqD,OAAQ,SAI5C,CC3De,SAASoD,EAAsB/I,GAC5C,OAAO6B,IAAE2B,YAAYxD,GAAS,GAAKA,CACrC,CCFe,SAASgJ,EAAgBC,GACtC,MAAM3B,EAAW,CAAC,EAKlB,OAJeyB,EAAsBE,EAAYtJ,SAC1C6G,QAAQ0C,IACb5B,EAAS4B,EAAQ/J,MAAQ+J,EAAQ1J,QAE5B8H,CACT,CCaA,MAAMqB,EAAyB,GAE/B,SAASQ,IACP,MAAOrE,EAAUsE,GAAejF,oBAAkB,IAC3CkF,EAAUC,GAAenF,mBAAkB,KAC3CoF,EAAOC,GAAYrF,mBAAuB,CAAE0E,KAAM,GAAIC,QAAS,KAEhEW,EAAuB5K,iBAAwBuI,EAA2B,IAC1EsC,EAAuB7K,iBAAwB6I,EAA2B,IAC1EiC,EAA+B9K,iBACnC4K,EAAqB9J,QAAQ2H,UAEzBsC,EAA+B/K,iBACnC6K,EAAqB/J,QAAQ2H,UAG/BrC,oBAAU,KACR,IAAI4E,EAEJ,MAAMC,EAAcA,KAClBR,EAAY,IAAIX,IAChB,MAAMoB,EAAS/I,SAASC,eAAe,QACvC,GAAI8I,EAAQ,CACV,MAAMC,EAAeD,EAAOE,aAAa,gBACnCC,EACY,MAAhBF,EACI,CAAEnB,KAAM,GAAIC,QAAS,IACrBqB,KAAKC,MAAMJ,GAEjBE,EAAmBrB,KAAO9I,EAAemK,EAAmBrB,MAC5DqB,EAAmBpB,QAAU/I,EAAemK,EAAmBpB,SAC/DU,EAASU,EACX,CACAL,EAAmBQ,sBAAsBP,IAK3C,OAFAD,EAAmBQ,sBAAsBP,GAElC,KACLQ,qBAAqBT,KAEtB,IAEH,MAAMU,EAA0BC,sBAAaC,IAC3ChB,EAAqB9J,QAAU8K,GAC9B,IAEGC,EAA0BF,sBAAaC,IAC3Cf,EAAqB/J,QAAU8K,GAC9B,IAEGE,EAAkCH,sBAAaI,IACnDjB,EAA6BhK,QAAUiL,GACtC,IAEGC,EAAkCL,sBAAaI,IACnDhB,EAA6BjK,QAAUiL,GACtC,IAEH3F,oBAAU,KACR,MAAM6F,EAAWjJ,IAAEC,UACjBsF,EACC2D,GAAMA,EAAE1D,QAAUoC,EAAqB9J,QAAQ0H,OAGlDsD,EACEvD,EAA2B0D,GAAUxD,WAEtC,CAACmC,EAAqB9J,UAEzBsF,oBAAU,KACR,MAAM6F,EAAWjJ,IAAEC,UACjB4F,EACCqD,GAAMA,EAAE1D,QAAUqC,EAAqB/J,QAAQ0H,OAGlDwD,EACEnD,EAA2BoD,GAAUxD,WAEtC,CAACoC,EAAqB/J,UAEzB,MAAMqL,EAAgBnM,mBACtBmM,EAAcrL,QAAU6K,sBAAaS,IACnC,MAAMC,EAAcrJ,IAAEC,UACpB6G,EACCwC,GAAMA,EAAE1G,MAAQwG,EAAaxG,MAEX,IAAjByG,IACFvC,EAAcuC,GAAeD,IAE9B,IAEH,MAAMG,EAAuBvM,mBAC7BuM,EAAqBzL,QAAU6K,sBAAa5G,IAC1C,MACMa,EAAMkC,KAAKO,SAASmE,SAAS,IAC/B1C,EAAcxI,OAFI,KAGpBwI,EAAcvI,KAAK,CAAEwD,WAAUa,SAEhC,IAEH,MAAM6G,EAAyBd,sBAAa9J,IAC1C,MAAMqJ,EAAS/I,SAASC,eAAe,QACnC8I,GACFA,EAAOwB,aAAa,sBAAuB7K,EAAelB,QAE3D,IAEH,OACET,eAAA,OAAAE,SAAA,CACEF,eAAA,OAAKM,UAAU,mBAAkBJ,SAAA,CAC/BC,cAACR,EAAM,CAACS,KAAK,YAAYO,SAAU0J,IACnCrK,eAAA,OAAKwC,GAAG,MAAKtC,SAAA,CACXC,cAACqB,EAAS,CACRpB,KAAK,qBACLkI,MAAM,oBACN5G,QAAS2G,EACT1H,SAAU6K,IAEZrL,cAACuC,EAAgB,CACfG,WAAYmH,EACVY,EAA6BhK,SAE/BwB,kBAAmBwJ,OAGvB5L,eAAA,OAAKwC,GAAG,MAAKtC,SAAA,CACXC,cAACqB,EAAS,CACRpB,KAAK,qBACLkI,MAAM,oBACN5G,QAASiH,EACThI,SAAUgL,IAEZxL,cAACuC,EAAgB,CACfG,WAAYmH,EACVa,EAA6BjK,SAE/BwB,kBAAmB0J,OAGvB3L,cAAA,OAAKqC,GAAG,MAAKtC,SACXC,cAACqB,EAAS,CACRpB,KAAK,uBACLkI,MAAM,sBACN5G,QAASwH,EACTvI,SAAU4L,SAKhBpM,cAACsM,IAAmB,CAACnK,MAAO,CAAEuC,SAAU,YAAa3E,SACnDC,cAACgJ,EAAc,CACb7G,MAAO,CAAE8D,UAAW,GAAIlC,UAAW,GACnC6B,SAAUA,EACVE,kBAAmB0E,EAAqB/J,QAAQH,MAC9CwJ,EAAgBY,IAElB7E,kBAAmB0E,EAAqB9J,QAAQH,MAC9CwJ,EAAgBW,IAElBjB,kBAAmB0C,EAAqBzL,QACxCkF,WAAYmG,EAAcrL,QAC1BgJ,cAAeU,EACfT,WAAsB,OAAVW,EAAiB,GAAKA,QAK5C,CACA,MAAMkC,EAAczK,SAASC,eAAe,QAE5C,GAAIwK,EAAa,CACf,IAAI5B,EAEJ,MAAM6B,EAAwBA,KAE5BD,EAAYF,aACV,kBAFU,GAGNrK,OACF,IACAyH,EACG1G,IAAKU,GAAUwH,KAAKwB,UAAU,CAAChJ,EAAMiB,SAASvD,EAAGsC,EAAMiB,SAAStD,KAChE+K,WACH,MAGJxB,EAAmBQ,sBAAsBqB,IAG3CA,IAEaE,qBAAWH,GACnBI,OAAO3M,cAACiK,EAAG,IAClB,C","file":"static/js/main.88da30f4.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './toggleSwitch.css';\nToggle.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n};\nexport default function Toggle(props) {\n  const toggle = useRef();\n  const checkbox = useRef();\n  function handleToggle() {\n    if (props.onChange) props.onChange(checkbox.current.checked);\n    toggle.current.classList.toggle('toggled');\n    checkbox.current.checked = !checkbox.current.checked;\n    if (props.onToggle) props.onToggle(checkbox.current.checked);\n  }\n  return (\n    <div {...props}>\n      <p>{props.name}</p>\n      <input\n        ref={checkbox}\n        name={props.name}\n        className=\"toggle-checkbox\"\n        type=\"checkbox\"\n        defaultChecked={props.value}\n        value={props.value || false}\n      />\n      <span\n        ref={toggle}\n        onClick={handleToggle}\n        className={props.checked ? 'toggled toggle-switch' : 'toggle-switch'}\n      >\n        <span className=\"toggle\"></span>\n      </span>\n    </div>\n  );\n}\n","export function positionParser(array) {\n  const pathPoints = [];\n\n  for (let i = 0; i < array.length / 2; i++) {\n    pathPoints.push({\n      x: array[2 * i],\n      y: array[2 * i + 1],\n    });\n  }\n\n  return pathPoints;\n}\n","import Select from 'react-select';\n\nexport default function SelectBox(props) {\n  const onChange = selectedOption => {\n    props.onChange(selectedOption);\n  };\n\n  return (\n    <div {...props}>\n      <p>{props.name}</p>\n      <Select options={props.options} onChange={onChange}></Select>\n    </div>\n  );\n}\n","export default function InputBox(props) {\n  const handleCheckboxChange = event => {\n    const target = event.target;\n    if (target.type === 'checkbox') {\n      props.handleInputChange({\n        name: target.name,\n        value: !target.checked,\n        type: target.type,\n      });\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const inputElement = document.getElementById(\n      props.name.concat('-input-form')\n    );\n\n    props.handleInputChange({\n      name: inputElement.name,\n      value: Number(inputElement.value),\n      type: inputElement.type,\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ padding: '1%' }}>\n      <label>\n        {props.name}\n        <br />\n        <input\n          id={props.name.concat('-input-form')}\n          type={props.type}\n          name={props.name}\n          onChange={handleCheckboxChange}\n        />\n      </label>\n    </form>\n  );\n}\n","import InputBox from './inputBox';\nimport _ from 'lodash';\n\nexport default function MultipleInputBox(props) {\n  function handleInputChange(inputChange) {\n    const newInputsInfo = [...props.inputsInfo];\n    const updateIndex = _.findIndex(\n      props.inputsInfo,\n      info => info.name === inputChange.name\n    );\n    newInputsInfo[updateIndex] = inputChange;\n    props.handleInputChange(newInputsInfo);\n  }\n\n  return (\n    <div class=\"multiple-input-box\">\n      {props.inputsInfo.map(info => (\n        <InputBox\n          handleInputChange={handleInputChange}\n          type={info.type}\n          name={info.name}\n        ></InputBox>\n      ))}\n    </div>\n  );\n}\n","const drawFunctionPoints = (ctx, points, style) => {\n  const { color = 'black', width = 1 } = style;\n\n  function sort_function(a, b) {\n    if (a.x > b.x) return 1;\n    if (a.x < b.x) return -1;\n    if (a.y > b.y) return 1;\n    if (a.y < b.y) return -1;\n  }\n  points.sort(sort_function);\n\n  if (points.length > 1) {\n    ctx.beginPath();\n    points.map((point, index) => {\n      if (index >= points.length - 1) {\n        return;\n      }\n      const nextPoint = points[index + 1];\n      ctx.moveTo(point.x, point.y);\n      ctx.lineTo(nextPoint.x, nextPoint.y);\n    });\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  }\n};\n\nexport default drawFunctionPoints;\n","export default function addPosition(p1, p2) {\n  return { x: p1.x + p2.x, y: p1.y + p2.y };\n}\n","import _ from 'lodash';\n\nexport default function originIfUndefined(displacement) {\n  return _.isUndefined(displacement) ? { x: 0, y: 0 } : displacement;\n}\n","import React, { useMemo, useEffect, useRef, useState } from 'react';\nimport Draggable from 'react-draggable';\nimport addPosition from '../tools/addPosition';\nimport originIfUndefined from '../tools/originIfUndefined';\n\nexport default function FloatingPoint(props) {\n  const initialPosition = useMemo(() => props.point.position, []);\n  const initialAnimationFrameCount = useMemo(\n    () => props.animationFrameCount,\n    []\n  );\n  const absoluteAnimationDisplacementRef = useRef();\n  const relativeAnimationDisplacementRef = useRef();\n\n  const [dragData, setDragData] = useState({\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    deltaY: 0,\n    lastX: 0,\n    lastY: 0,\n  });\n\n  const updatePivotalPoint = () => {\n    const { key } = props.point;\n    const absoluteAnimationDisplacement = originIfUndefined(\n      absoluteAnimationDisplacementRef.current\n    );\n\n    const relativeAnimationDisplacement = originIfUndefined(\n      relativeAnimationDisplacementRef.current\n    );\n\n    const newPosition = addPosition(\n      addPosition(initialPosition, dragData),\n      addPosition(absoluteAnimationDisplacement, relativeAnimationDisplacement)\n    );\n\n    const newPoint = { key, position: newPosition };\n    props.handleDrag(newPoint);\n  };\n\n  const {\n    animated,\n    absoluteAnimation,\n    relativeAnimation,\n    animationFrameCount,\n  } = props;\n\n  useEffect(() => {\n    if (animated) {\n      const absoluteMovement = absoluteAnimation();\n      absoluteAnimationDisplacementRef.current = addPosition(\n        originIfUndefined(absoluteAnimationDisplacementRef.current),\n        absoluteMovement\n      );\n      relativeAnimationDisplacementRef.current = relativeAnimation(\n        animationFrameCount - initialAnimationFrameCount\n      );\n      updatePivotalPoint();\n    }\n  }, [animationFrameCount]);\n\n  const handleDrag = (_event, dragData) => {\n    setDragData(dragData);\n    updatePivotalPoint();\n  };\n\n  const { pointSize, color } = props.pointStyle;\n  const absoluteAnimationDisplacement = originIfUndefined(\n    absoluteAnimationDisplacementRef.current\n  );\n  const relativeAnimationDisplacement = originIfUndefined(\n    relativeAnimationDisplacementRef.current\n  );\n\n  const animationDisplacement = addPosition(\n    relativeAnimationDisplacement,\n    absoluteAnimationDisplacement\n  );\n\n  return (\n    <Draggable onDrag={handleDrag}>\n      <div\n        className=\"drag-wrapper\"\n        style={{\n          position: 'absolute',\n          left: initialPosition.x + animationDisplacement.x - pointSize,\n          top: initialPosition.y + animationDisplacement.y - pointSize,\n          width: 2 * pointSize,\n          height: 2 * pointSize,\n          borderRadius: '100%',\n          background: color,\n          opacity: 0,\n        }}\n      ></div>\n    </Draggable>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport './pointCanvas.css';\nimport { Position, PointStyle, LineStyle, CanvasStyle } from '../types';\n\nfunction drawCoordinates(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  pointStyle: PointStyle\n) {\n  const { color = '#ff2626', pointSize = 10 } = pointStyle;\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.arc(x, y, pointSize, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.stroke();\n}\n\ninterface PointCanvasProps {\n  draw: (\n    ctx: CanvasRenderingContext2D,\n    pathPoints: Position[],\n    lineStyle: LineStyle\n  ) => void;\n  pathPoints: Position[];\n  points: Position[];\n  pointStyle: PointStyle;\n  lineStyle: LineStyle;\n  canvasStyle: CanvasStyle;\n  [key: string]: any;\n}\n\nfunction PointCanvas(props: PointCanvasProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const { draw, pathPoints, points, pointStyle, lineStyle, canvasStyle } =\n    props;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const context = canvas.getContext('2d');\n    if (!context) return;\n\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n    draw(context, pathPoints, lineStyle);\n    points.forEach(point => {\n      drawCoordinates(context, point.x, point.y, pointStyle);\n    });\n  }, [draw, points, pathPoints, pointStyle, lineStyle]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={canvasStyle.width}\n      height={canvasStyle.height}\n      {...props}\n    />\n  );\n}\n\nexport default PointCanvas;\n","import { SCAN_RATE } from \"../../constant\";\n\nconst pseudoNormalGenerator = (n) => {\n  var randomValue = 0;\n  for (var i = 0; i < n; i++) {\n    randomValue += Math.random();\n  }\n  return (randomValue - n / 2) / (n / 12) ** 2;\n};\n\nexport default function brownianMotion({ sigma }) {\n  return () => {\n    return {\n      x: (sigma * pseudoNormalGenerator(5)) / SCAN_RATE ** 0.5,\n      y: (sigma * pseudoNormalGenerator(5)) / SCAN_RATE ** 0.5,\n    };\n  };\n}\n","import brownianMotion from './animations/absoluteAnimations/brownianMotion';\nimport linear from './animations/absoluteAnimations/linear';\nimport circular from './animations/relativeAnimations/circular';\nimport { AnimationOption, InterpolationOption } from './types';\n\nexport const SCAN_RATE = 60;\n\nexport const ABSOLUTE_ANIMATION_OPTIONS: AnimationOption[] = [\n  { value: () => () => ({ x: 0, y: 0 }), label: \"None\", variable: [] },\n  {\n    value: brownianMotion,\n    label: \"Brownian Motion\",\n    variable: [{ name: \"sigma\", value: 5, type: \"number\" }],\n  },\n  {\n    value: linear,\n    label: \"Linear\",\n    variable: [\n      { name: \"x\", value: 20, type: \"number\" },\n      { name: \"y\", value: 10, type: \"number\" },\n    ],\n  },\n];\n\nexport const RELATIVE_ANIMATION_OPTIONS: AnimationOption[] = [\n  { value: () => () => ({ x: 0, y: 0 }), label: \"None\", variable: [] },\n  {\n    value: circular,\n    label: \"Circular\",\n    variable: [\n      { name: \"radius\", value: 10, type: \"number\" },\n      { name: \"freq\", value: 1, type: \"number\" },\n      { name: \"clockwise\", value: true, type: \"checkbox\" },\n    ],\n  },\n];\n\nexport const INTERPOLATION_OPTIONS: InterpolationOption[] = [\n  { value: \"wavy\", label: \"Wavy\" },\n  { value: \"linear\", label: \"Linear\" },\n  { value: \"lagrange\", label: \"Lagrange\" },\n  { value: \"quad_spline\", label: \"Quadratic Spline\" },\n  { value: \"cubic_spline\", label: \"Cubic Spline\" },\n  { value: \"fourth_spline\", label: \"4th Spline\" },\n  { value: \"fifth_spline\", label: \"5th Spline\" },\n  { value: \"akima\", label: \"Akima\" },\n  { value: \"pchip\", label: \"PCHIP\" },\n];\n","import { SCAN_RATE } from \"../../constant\";\n\nexport default function linear(speed) {\n  return () => {\n    return {\n      x: speed.x / SCAN_RATE,\n      y: speed.y / SCAN_RATE,\n    };\n  };\n}\n","import { SCAN_RATE } from \"../../constant\";\n\nexport default function circular({ radius, freq, clockwise }) {\n  return (animationFrameCount) => {\n    const phase = clockwise\n      ? (-2 * Math.PI * freq * animationFrameCount) / SCAN_RATE\n      : (2 * Math.PI * freq * animationFrameCount) / SCAN_RATE;\n\n    return {\n      x: radius * Math.cos(phase) - radius,\n      y: radius * Math.sin(phase),\n    };\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport drawFunctionPoints from \"./drawing/drawFunctionPoints\";\nimport FloatingPoint from \"./components/floatingPoint\";\nimport PointCanvas from \"./canvas/pointCanvas\";\nimport { SCAN_RATE } from \"./constant\";\n\nexport default function PositionSetter(props) {\n  const appendPoint = () => {\n    const { position } = props;\n    props.handleDoubleClick(position);\n  };\n\n  const [animationFrameCount, setAnimationFrameCount] = useState(0);\n\n  const { animated, absoluteAnimation, relativeAnimation, lineWidth, style } =\n    props;\n  const { pointSize } = style;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (animated) {\n        setAnimationFrameCount((prev) => prev + 1);\n      }\n    }, 1000 / SCAN_RATE);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [animated]);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n      }}\n      onDoubleClick={appendPoint}\n    >\n      {props.pivotalPoints.map((point) => {\n        return (\n          <FloatingPoint\n            animated={animated}\n            absoluteAnimation={absoluteAnimation}\n            relativeAnimation={relativeAnimation}\n            animationFrameCount={animationFrameCount}\n            handleDrag={props.handleDrag}\n            point={point}\n            pointStyle={{ pointSize: 10, color: \"yellow\" }}\n          />\n        );\n      })}\n      <PointCanvas\n        draw={drawFunctionPoints}\n        pathPoints={props.plotPoints.path}\n        points={props.plotPoints.pivotal}\n        lineStyle={{ color: \"black\", width: lineWidth }}\n        pointStyle={{ color: \"red\", pointSize: pointSize }}\n        canvasStyle={{ width: 7200, height: 4000 }}\n      />\n    </div>\n  );\n}\n","import _ from 'lodash';\n\nexport default function emptyArrayIfUndefined(array) {\n  return _.isUndefined(array) ? [] : array;\n}\n","import emptyArrayIfUndefined from './emptyArrayIfUndefined';\n\nexport default function extractVariable(variableRef) {\n  const variable = {};\n  const target = emptyArrayIfUndefined(variableRef.current);\n  target.forEach(singleV => {\n    variable[singleV.name] = singleV.value;\n  });\n  return variable;\n}\n","import { createRoot } from 'react-dom/client';\nimport ReactCursorPosition from 'react-cursor-position';\nimport Toggle from './components/toggleSwitch';\nimport _ from 'lodash';\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { positionParser } from './api/parsePoints';\nimport SelectBox from './components/selectBox';\nimport MultipleInputBox from './components/multipleInputBox';\n\nimport './index.css';\nimport PositionSetter from './pointSetter';\n\nimport emptyArrayIfUndefined from './tools/emptyArrayIfUndefined';\nimport extractVariable from './tools/extractVariable';\n\nimport {\n  ABSOLUTE_ANIMATION_OPTIONS,\n  RELATIVE_ANIMATION_OPTIONS,\n  INTERPOLATION_OPTIONS,\n} from './constant';\nimport { Point, PlotPosition, AnimationOption } from './types';\n\nconst pivotalPoints: Point[] = [];\n\nfunction App() {\n  const [animated, setAnimated] = useState<boolean>(false);\n  const [pivotalP, setPivotalP] = useState<Point[]>([]);\n  const [plotP, setPlotP] = useState<PlotPosition>({ path: [], pivotal: [] });\n\n  const absoluteAnimationRef = useRef<AnimationOption>(ABSOLUTE_ANIMATION_OPTIONS[0]);\n  const relativeAnimationRef = useRef<AnimationOption>(RELATIVE_ANIMATION_OPTIONS[0]);\n  const absoluteAnimationVariableRef = useRef(\n    absoluteAnimationRef.current.variable\n  );\n  const relativeAnimationVariableRef = useRef(\n    relativeAnimationRef.current.variable\n  );\n\n  useEffect(() => {\n    let animationFrameId: number;\n    \n    const updateState = () => {\n      setPivotalP([...pivotalPoints]);\n      const rootEl = document.getElementById('root');\n      if (rootEl) {\n        const plotPosition = rootEl.getAttribute('plotPosition');\n        const plotPositionParsed =\n          plotPosition == null\n            ? { path: [], pivotal: [] }\n            : JSON.parse(plotPosition);\n\n        plotPositionParsed.path = positionParser(plotPositionParsed.path);\n        plotPositionParsed.pivotal = positionParser(plotPositionParsed.pivotal);\n        setPlotP(plotPositionParsed);\n      }\n      animationFrameId = requestAnimationFrame(updateState);\n    };\n\n    animationFrameId = requestAnimationFrame(updateState);\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  const setAbsoluteAnimationRef = useCallback((obj: AnimationOption) => {\n    absoluteAnimationRef.current = obj;\n  }, []);\n  \n  const setRelativeAnimationRef = useCallback((obj: AnimationOption) => {\n    relativeAnimationRef.current = obj;\n  }, []);\n\n  const setAbsoluteAnimationVariableRef = useCallback((arr: any) => {\n    absoluteAnimationVariableRef.current = arr;\n  }, []);\n\n  const setRelativeAnimationVariableRef = useCallback((arr: any) => {\n    relativeAnimationVariableRef.current = arr;\n  }, []);\n\n  useEffect(() => {\n    const newIndex = _.findIndex(\n      ABSOLUTE_ANIMATION_OPTIONS,\n      (o) => o.label === absoluteAnimationRef.current.label\n    );\n\n    setAbsoluteAnimationVariableRef(\n      ABSOLUTE_ANIMATION_OPTIONS[newIndex].variable\n    );\n  }, [absoluteAnimationRef.current]);\n\n  useEffect(() => {\n    const newIndex = _.findIndex(\n      RELATIVE_ANIMATION_OPTIONS,\n      (o) => o.label === relativeAnimationRef.current.label\n    );\n\n    setRelativeAnimationVariableRef(\n      RELATIVE_ANIMATION_OPTIONS[newIndex].variable\n    );\n  }, [relativeAnimationRef.current]);\n\n  const handleDragRef = useRef<(draggedPoint: Point) => void>();\n  handleDragRef.current = useCallback((draggedPoint: Point) => {\n    const updateIndex = _.findIndex(\n      pivotalPoints,\n      (p) => p.key === draggedPoint.key\n    );\n    if (updateIndex !== -1) {\n      pivotalPoints[updateIndex] = draggedPoint;\n    }\n  }, []);\n\n  const handleDoubleClickRef = useRef<(position: { x: number; y: number }) => void>();\n  handleDoubleClickRef.current = useCallback((position: { x: number; y: number }) => {\n    const MAX_POINT_NUM = 100;\n    const key = Math.random().toString(36);\n    if (pivotalPoints.length < MAX_POINT_NUM) {\n      pivotalPoints.push({ position, key });\n    }\n  }, []);\n\n  const setInterpolationMethod = useCallback((selectedOption: { value: string }) => {\n    const rootEl = document.getElementById('root');\n    if (rootEl) {\n      rootEl.setAttribute('interpolationMethod', selectedOption.value);\n    }\n  }, []);\n\n  return (\n    <div>\n      <div className=\"select-container\">\n        <Toggle name=\"Animated?\" onChange={setAnimated} />\n        <div id=\"2nd\">\n          <SelectBox\n            name=\"Absolute Animation\"\n            label=\"absoluteAnimation\"\n            options={ABSOLUTE_ANIMATION_OPTIONS}\n            onChange={setAbsoluteAnimationRef}\n          ></SelectBox>\n          <MultipleInputBox\n            inputsInfo={emptyArrayIfUndefined(\n              absoluteAnimationVariableRef.current\n            )}\n            handleInputChange={setAbsoluteAnimationVariableRef}\n          ></MultipleInputBox>\n        </div>\n        <div id=\"3rd\">\n          <SelectBox\n            name=\"Relative Animation\"\n            label=\"relativeAnimation\"\n            options={RELATIVE_ANIMATION_OPTIONS}\n            onChange={setRelativeAnimationRef}\n          ></SelectBox>\n          <MultipleInputBox\n            inputsInfo={emptyArrayIfUndefined(\n              relativeAnimationVariableRef.current\n            )}\n            handleInputChange={setRelativeAnimationVariableRef}\n          ></MultipleInputBox>\n        </div>\n        <div id=\"4th\">\n          <SelectBox\n            name=\"Interpolation Method\"\n            label=\"interpolationMethod\"\n            options={INTERPOLATION_OPTIONS}\n            onChange={setInterpolationMethod}\n          ></SelectBox>\n        </div>\n      </div>\n\n      <ReactCursorPosition style={{ position: \"absolute\" }}>\n        <PositionSetter\n          style={{ pointSize: 10, lineWidth: 5 }}\n          animated={animated}\n          relativeAnimation={relativeAnimationRef.current.value(\n            extractVariable(relativeAnimationVariableRef)\n          )}\n          absoluteAnimation={absoluteAnimationRef.current.value(\n            extractVariable(absoluteAnimationVariableRef)\n          )}\n          handleDoubleClick={handleDoubleClickRef.current}\n          handleDrag={handleDragRef.current}\n          pivotalPoints={pivotalP}\n          plotPoints={plotP === null ? [] : plotP}\n        />\n      </ReactCursorPosition>\n    </div>\n  );\n}\nconst rootElement = document.getElementById('root');\n\nif (rootElement) {\n  let animationFrameId: number;\n  \n  const updatePivotalPosition = () => {\n    const str = '';\n    rootElement.setAttribute(\n      'pivotalPosition',\n      str.concat(\n        '[',\n        pivotalPoints\n          .map((point) => JSON.stringify([point.position.x, point.position.y]))\n          .toString(),\n        ']'\n      )\n    );\n    animationFrameId = requestAnimationFrame(updatePivotalPosition);\n  };\n  \n  updatePivotalPosition();\n  \n  const root = createRoot(rootElement);\n  root.render(<App />);\n}\n"],"sourceRoot":""}